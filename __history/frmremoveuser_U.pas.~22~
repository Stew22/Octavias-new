unit frmremoveuser_U;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.ExtCtrls,
  System.ImageList, Vcl.ImgList,DM_Users;

type
  Tfrmremoveuser = class(TForm)
    pnl1: TPanel;
    pnl2: TPanel;
    cbbuname: TComboBox;
    cbbname: TComboBox;
    cbbsurname: TComboBox;
    cbbemail: TComboBox;
    pnl3: TPanel;
    btncancell: TButton;
    btnremoveuser: TButton;
    il1: TImageList;
    lbl1: TLabel;
    procedure btncancellClick(Sender: TObject);
    procedure cbbunameChange(Sender: TObject);
    procedure btnremoveuserClick(Sender: TObject);
    procedure FormActivate(Sender: TObject);
    procedure cbbnameChange(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmremoveuser: Tfrmremoveuser;

implementation

{$R *.dfm}

procedure Tfrmremoveuser.btncancellClick(Sender: TObject);
begin
 cbbuname.Clear;
 cbbname.Clear;
 cbbsurname.Clear;
 cbbemail.Clear;
 frmremoveuser.close;
 //here we will cancell
end;

procedure Tfrmremoveuser.btnremoveuserClick(Sender: TObject);
begin
 //Here we will remove the user from the database
 if InputBox('Are You Sure You Want To Remove The User ?', 'Please Type Yes If It Is Correct : ' , '') = 'Yes' then
 begin
  with DataModuleUsers do
  begin
   if tblusers.Filtered = True then
   begin
    tblusers.Delete;
   end else
   begin
    ShowMessage('An Error Has Accoured , Please Try Again !');
    frmremoveuser.Close;
   end;
  end;
 end else
 begin
  ShowMessage('Deleting Of User Has Been Cancelled !');
 end;
end;

procedure Tfrmremoveuser.cbbnameChange(Sender: TObject);
begin
 //here we will enable all the other fields and populate them with data
 with DataModuleUsers do
 begin
  tblusers.Filtered:=False;
  tblusers.Filter:='Name = ' + QuotedStr(cbbname.Text);
  tblusers.Filtered:=True;
  //
  cbbuname.Enabled:=True;
  cbbsurname.Enabled:=True;
  cbbemail.Enabled:=True;
  //
  //now we populate with data
  cbbuname.Text:= tblusers.FieldByName('Username').AsString;
  cbbsurname.Text:= tblusers.FieldByName('Surname').AsString;
  cbbemail.Text:= tblusers.FieldByName('EmailAddress').AsString;
  //
 end;
end;

procedure Tfrmremoveuser.cbbunameChange(Sender: TObject);
begin
 //here we will code an autoo fill then when the user selects it
 //it must populate all the fields
end;

procedure Tfrmremoveuser.FormActivate(Sender: TObject);
var
  J:Integer;
begin
 cbbuname.Enabled:=False;
 cbbsurname.Enabled:=False;
 cbbemail.Enabled:=False;
 //populate the name field from the database
 //
  with DataModuleUsers do
  begin
    if not conusers.Connected then
    begin
      // Connect to the database
      conusers.ConnectionString := 'Provider=Microsoft.ACE.OLEDB.12.0;' +
        'Data Source=' + ExtractFilePath(Application.ExeName) + '\Bin\UserDatabase.accdb' +
        ';Mode=ReadWrite;Persist Security Info=False';
      //
      tblusers.TableName := 'tblusers';
      conusers.Connected := True;
      tblusers.Active := True;
      //tblusers.First;
      // Populate user fields or any other necessary initializations
      //
    end;
    while not tblusers.Eof do
    begin
     cbbname.Items.Add(tblusers.FieldByName('Name').AsString);
     tblusers.Next;
    end;
  end;
end;

end.
