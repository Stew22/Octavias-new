unit frmregister_U;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, System.ImageList,
  Vcl.ImgList, Vcl.ExtCtrls,DM_Users;

type
  Tfrmadduser = class(TForm)
    pnl1: TPanel;
    il1: TImageList;
    pnl2: TPanel;
    pnl3: TPanel;
    cbbuserprem: TComboBox;
    edtuname: TEdit;
    edtuemail: TEdit;
    edtname: TEdit;
    edtsurname: TEdit;
    edtcell: TEdit;
    edtstore: TEdit;
    edtpassword: TEdit;
    edtcpassword: TEdit;
    lbl2: TLabel;
    lbl3: TLabel;
    lbl4: TLabel;
    lbl5: TLabel;
    lbl6: TLabel;
    lbl7: TLabel;
    lbl8: TLabel;
    lbl9: TLabel;
    lbl1: TLabel;
    pnl4: TPanel;
    btnaduser: TButton;
    btncancell: TButton;
    edtvendoraddress: TEdit;
    lbl10: TLabel;
    Label1: TLabel;
    procedure FormActivate(Sender: TObject);
    procedure btndeleteuserClick(Sender: TObject);
    procedure btnedituserClick(Sender: TObject);
    procedure btncancellClick(Sender: TObject);
    procedure btnaduserClick(Sender: TObject);
    procedure edtcpasswordChange(Sender: TObject);
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  frmadduser: Tfrmadduser;

implementation

{$R *.dfm}

procedure Tfrmadduser.btnaduserClick(Sender: TObject);
var
 I:integer;
begin
 //
 if cbbuserprem.Text = 'Admin' then
 begin
  //here we will need to have a way to check first if this person can be an admin
  if InputBox('Please Enter The Admin User Name','User Name : ','') = 'Admin' then
  begin
   if InputBox('Please Enter The Admin Password','Password : ','') = 'Admin' then
   begin
    //since they have been confirmed we can then add them to the data base
   end else
   begin
    ShowMessage('Pasword You Have Entered Is Incorrect ! , Please Try Again');
   end;
  end else
  begin
   ShowMessage('User Name You Have Entered Is Incorrect ! , Please Try Again');
  end;
 end else
 begin
  if cbbuserprem.Text = 'Orderer' then
  begin
    with DataModuleUsers do
    begin
       for i := 0 to tblusers.RecordCount - 1 do
       begin
        if (edtuname.Text = tblusers.FieldByName('Username').AsString) or
        (edtcell.Text = tblusers.FieldByName('CellNumber').AsString) or
        (edtuemail.Text = tblusers.FieldByName('EmailAddress').AsString) or
        (edtname.Text = tblusers.FieldByName('Name').AsString) or
        (edtsurname.Text = tblusers.FieldByName('Surname').AsString) or
        (edtcell.Text = tblusers.FieldByName('CellNumber').AsString) then
        begin
         //the user exists
         //raise an error
         ShowMessage('The User Already Exists ! , Please Try Again With Diffrent Details');
         //clear all the fields?
        end else
        begin
         //user does not exist , we can add them
         //we can append
         //here we will check if the passwords match
          //
          tblusers.Last;
          tblusers.Append;
          tblusers['Username'] := edtuname.Text;
          tblusers['EmailAddress'] := edtuemail.Text;
          tblusers['Password'] := edtpassword.Text;
          tblusers['StoreName'] := edtstore.Text;
          tblusers['Name'] := edtname.Text;
          tblusers['Surname'] := edtsurname.Text;
          tblusers['CellNumber'] := edtcell.Text;
          tblusers['Premissions'] := cbbuserprem.Text;
          tblusers['User_Address'] := edtvendoraddress.Text;
          //
          tblusers.Post; //close the edit
        end;
       end;
    end;
  end else
  begin
   ShowMessage('Please Select A Valid User Premision Level !');
   cbbuserprem.Text:='';
   cbbuserprem.SetFocus;
  end;
 end;
end;

procedure Tfrmadduser.btncancellClick(Sender: TObject);
begin
 edtuname.Clear;
 edtuemail.Clear;
 edtname.Clear;
 edtsurname.Clear;
 edtcell.Clear;
 edtstore.Clear;
 edtpassword.Clear;
 edtcpassword.Clear;
 frmadduser.Close;
 cbbuserprem.Clear;
end;

procedure Tfrmadduser.btndeleteuserClick(Sender: TObject);
begin
 //here we will disable all other fields and only leave the username field
 // this will only be availible if the user is an admin
end;

procedure Tfrmadduser.btnedituserClick(Sender: TObject);
begin
 //here we will allow the user loged into there own profile to edit there details
end;

procedure Tfrmadduser.edtcpasswordChange(Sender: TObject);
begin
 if edtpassword.Text = edtcpassword.Text then
 begin
  btnaduser.Enabled:=True;
 end else
 begin
  btnaduser.Enabled:=False;
 end;
end;

procedure Tfrmadduser.FormActivate(Sender: TObject);
 var
 i:Integer;
begin

 //here we have set only 2 account types
 //the admin account can add and remove users
 //the admin can also place orders
 //the admin can also add and remove suppliers
 //the admin and update pricing aswell
 with DataModuleUsers do
 begin
  if conusers.Connected = False then
  begin
   //here we will connect the database first before doing anything
    conusers.ConnectionString:='Provider=Microsoft.ACE.OLEDB.12.0;' +
    'Data Source=' + ExtractFilePath(Application.ExeName) + '\Bin\UserDatabase.accdb' +
    ';Mode=ReadWrite;Persist Security Info=False';
   //
   tblusers.TableName:='tblusers';
   //
   conusers.Connected:=True;
   tblusers.Active;
   //
  end else
  begin
   //here we can do nothing since it is already connected
  end;
 end;
end;

procedure Tfrmadduser.FormCreate(Sender: TObject);
begin
 cbbuserprem.Items.Add('Orderer');
 cbbuserprem.Items.Add('Admin');
 btnaduser.Enabled:=False;
end;

end.
